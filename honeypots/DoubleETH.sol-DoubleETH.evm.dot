digraph honeybadger_cfg {
rankdir = TB;
size = "240"
graph[fontname = Courier, fontsize = 14.0, labeljust = l, nojustify = true];node[shape = record];
"0x0"[label="0x00000000 PUSH1 0x80 \l0x00000002 PUSH1 0x40 \l0x00000004 MSTORE \l0x00000005 PUSH1 0x04 \l0x00000007 CALLDATASIZE \l0x00000008 LT \l0x00000009 PUSH2 0x0078 \l0x0000000c JUMPI \l"];
"0x0" -> "0x78" [color="green" label=" Not(ULE(4, Id_size))"];
"0x0" -> "0xd" [color="red" label=" ULE(4, Id_size)"];
"0x303"[label="0x00000303 JUMPDEST \l0x00000304 PUSH1 0x00 \l0x00000306 ADDRESS \l0x00000307 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000031c AND \l0x0000031d BALANCE \l0x0000031e SWAP1 \l0x0000031f POP \l0x00000320 SWAP1 \l0x00000321 JUMP \l"];
"0x303" -> "0x12e" [color="black"];
"0x85"[label="0x00000085 PUSH1 0x00 \l0x00000087 DUP1 \l0x00000088 REVERT \l"];
"0x89"[label="0x00000089 JUMPDEST \l0x0000008a POP \l0x0000008b PUSH2 0x0092 \l0x0000008e PUSH2 0x01e8 \l0x00000091 JUMP \l"];
"0x89" -> "0x1e8" [color="black"];
"0xd"[label="0x0000000d PUSH1 0x00 \l0x0000000f CALLDATALOAD \l0x00000010 PUSH29 0x0100000000000000000000000000000000000000000000000000000000 \l0x0000002e SWAP1 \l0x0000002f DIV \l0x00000030 PUSH4 0xffffffff \l0x00000035 AND \l0x00000036 DUP1 \l0x00000037 PUSH4 0x02e26c38 \l0x0000003c EQ \l0x0000003d PUSH2 0x007d \l0x00000040 JUMPI \l"];
"0xd" -> "0x7d" [color="green" label=" Extract(255, 224, Id_1) == 48393272"];
"0xd" -> "0x41" [color="red" label=" Not(Extract(255, 224, Id_1) == 48393272)"];
"0x191"[label="0x00000191 JUMPDEST \l0x00000192 CALLVALUE \l0x00000193 DUP1 \l0x00000194 ISZERO \l0x00000195 PUSH2 0x019d \l0x00000198 JUMPI \l"];
"0x191" -> "0x19d" [color="green" label=" Iv == 0"];
"0x191" -> "0x199" [color="red" label=" Not(Iv == 0)"];
"0x92"[label="0x00000092 JUMPDEST \l0x00000093 PUSH1 0x40 \l0x00000095 MLOAD \l0x00000096 DUP1 \l0x00000097 DUP3 \l0x00000098 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000000ad AND \l0x000000ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000000c3 AND \l0x000000c4 DUP2 \l0x000000c5 MSTORE \l0x000000c6 PUSH1 0x20 \l0x000000c8 ADD \l0x000000c9 SWAP2 \l0x000000ca POP \l0x000000cb POP \l0x000000cc PUSH1 0x40 \l0x000000ce MLOAD \l0x000000cf DUP1 \l0x000000d0 SWAP2 \l0x000000d1 SUB \l0x000000d2 SWAP1 \l0x000000d3 RETURN \l"];
"0x199"[label="0x00000199 PUSH1 0x00 \l0x0000019b DUP1 \l0x0000019c REVERT \l"];
"0x119"[label="0x00000119 JUMPDEST \l0x0000011a CALLVALUE \l0x0000011b DUP1 \l0x0000011c ISZERO \l0x0000011d PUSH2 0x0125 \l0x00000120 JUMPI \l"];
"0x119" -> "0x125" [color="green" label=" Iv == 0"];
"0x119" -> "0x121" [color="red" label=" Not(Iv == 0)"];
"0x41c"[label="0x0000041c STOP \l"];
"0x19d"[label="0x0000019d JUMPDEST \l0x0000019e POP \l0x0000019f PUSH2 0x01a6 \l0x000001a2 PUSH2 0x03f6 \l0x000001a5 JUMP \l"];
"0x19d" -> "0x3f6" [color="black"];
"0x121"[label="0x00000121 PUSH1 0x00 \l0x00000123 DUP1 \l0x00000124 REVERT \l"];
"0x322"[label="0x00000322 JUMPDEST \l0x00000323 PUSH1 0x02 \l0x00000325 SLOAD \l0x00000326 DUP2 \l0x00000327 JUMP \l"];
"0x322" -> "0x159" [color="black"];
"0x125"[label="0x00000125 JUMPDEST \l0x00000126 POP \l0x00000127 PUSH2 0x012e \l0x0000012a PUSH2 0x0303 \l0x0000012d JUMP \l"];
"0x125" -> "0x303" [color="black"];
"0x1a6"[label="0x000001a6 JUMPDEST \l0x000001a7 PUSH1 0x40 \l0x000001a9 MLOAD \l0x000001aa DUP1 \l0x000001ab DUP3 \l0x000001ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000001c1 AND \l0x000001c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000001d7 AND \l0x000001d8 DUP2 \l0x000001d9 MSTORE \l0x000001da PUSH1 0x20 \l0x000001dc ADD \l0x000001dd SWAP2 \l0x000001de POP \l0x000001df POP \l0x000001e0 PUSH1 0x40 \l0x000001e2 MLOAD \l0x000001e3 DUP1 \l0x000001e4 SWAP2 \l0x000001e5 SUB \l0x000001e6 SWAP1 \l0x000001e7 RETURN \l"];
"0x328"[label="0x00000328 JUMPDEST \l0x00000329 PUSH1 0x00 \l0x0000032b PUSH1 0x02 \l0x0000032d SLOAD \l0x0000032e CALLVALUE \l0x0000032f GT \l0x00000330 ISZERO \l0x00000331 ISZERO \l0x00000332 PUSH2 0x033a \l0x00000335 JUMPI \l"];
"0x328" -> "0x33a" [color="green" label=" Not(ULE(Iv, Ia_store_2))"];
"0x328" -> "0x336" [color="red" label=" ULE(Iv, Ia_store_2)"];
"0x12e"[label="0x0000012e JUMPDEST \l0x0000012f PUSH1 0x40 \l0x00000131 MLOAD \l0x00000132 DUP1 \l0x00000133 DUP3 \l0x00000134 DUP2 \l0x00000135 MSTORE \l0x00000136 PUSH1 0x20 \l0x00000138 ADD \l0x00000139 SWAP2 \l0x0000013a POP \l0x0000013b POP \l0x0000013c PUSH1 0x40 \l0x0000013e MLOAD \l0x0000013f DUP1 \l0x00000140 SWAP2 \l0x00000141 SUB \l0x00000142 SWAP1 \l0x00000143 RETURN \l"];
"0x336"[label="0x00000336 PUSH1 0x00 \l0x00000338 DUP1 \l0x00000339 REVERT \l"];
"0x33a"[label="0x0000033a JUMPDEST \l0x0000033b CALLVALUE \l0x0000033c PUSH1 0x03 \l0x0000033e PUSH1 0x00 \l0x00000340 DUP1 \l0x00000341 PUSH1 0x00 \l0x00000343 SWAP1 \l0x00000344 SLOAD \l0x00000345 SWAP1 \l0x00000346 PUSH2 0x0100 \l0x00000349 EXP \l0x0000034a SWAP1 \l0x0000034b DIV \l0x0000034c PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000361 AND \l0x00000362 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000377 AND \l0x00000378 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000038d AND \l0x0000038e DUP2 \l0x0000038f MSTORE \l0x00000390 PUSH1 0x20 \l0x00000392 ADD \l0x00000393 SWAP1 \l0x00000394 DUP2 \l0x00000395 MSTORE \l0x00000396 PUSH1 0x20 \l0x00000398 ADD \l0x00000399 PUSH1 0x00 \l0x0000039b SHA3 \l0x0000039c PUSH1 0x00 \l0x0000039e DUP3 \l0x0000039f DUP3 \l0x000003a0 SLOAD \l0x000003a1 ADD \l0x000003a2 SWAP3 \l0x000003a3 POP \l0x000003a4 POP \l0x000003a5 DUP2 \l0x000003a6 SWAP1 \l0x000003a7 SSTORE \l0x000003a8 POP \l0x000003a9 CALLER \l0x000003aa PUSH1 0x00 \l0x000003ac DUP1 \l0x000003ad PUSH2 0x0100 \l0x000003b0 EXP \l0x000003b1 DUP2 \l0x000003b2 SLOAD \l0x000003b3 DUP2 \l0x000003b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000003c9 MUL \l0x000003ca NOT \l0x000003cb AND \l0x000003cc SWAP1 \l0x000003cd DUP4 \l0x000003ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000003e3 AND \l0x000003e4 MUL \l0x000003e5 OR \l0x000003e6 SWAP1 \l0x000003e7 SSTORE \l0x000003e8 POP \l0x000003e9 CALLVALUE \l0x000003ea PUSH1 0x02 \l0x000003ec DUP2 \l0x000003ed SWAP1 \l0x000003ee SSTORE \l0x000003ef POP \l0x000003f0 PUSH1 0x01 \l0x000003f2 SWAP1 \l0x000003f3 POP \l0x000003f4 SWAP1 \l0x000003f5 JUMP \l"];
"0x33a" -> "0x177" [color="black"];
"0x41"[label="0x00000041 DUP1 \l0x00000042 PUSH4 0x2e1a7d4d \l0x00000047 EQ \l0x00000048 PUSH2 0x00d4 \l0x0000004b JUMPI \l"];
"0x41" -> "0xd4" [color="green" label=" Extract(255, 224, Id_1) == 773487949"];
"0x41" -> "0x4c" [color="red" label=" Not(Extract(255, 224, Id_1) == 773487949)"];
"0x20d"[label="0x0000020d JUMPDEST \l0x0000020e PUSH1 0x00 \l0x00000210 PUSH1 0x01 \l0x00000212 PUSH1 0x00 \l0x00000214 SWAP1 \l0x00000215 SLOAD \l0x00000216 SWAP1 \l0x00000217 PUSH2 0x0100 \l0x0000021a EXP \l0x0000021b SWAP1 \l0x0000021c DIV \l0x0000021d PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000232 AND \l0x00000233 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000248 AND \l0x00000249 CALLER \l0x0000024a PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000025f AND \l0x00000260 EQ \l0x00000261 ISZERO \l0x00000262 ISZERO \l0x00000263 ISZERO \l0x00000264 PUSH2 0x026c \l0x00000267 JUMPI \l"];
"0x20d" -> "0x26c" [color="green" label=" Not(Extract(159, 0, Is) == Extract(159, 0, Ia_store_1))"];
"0x20d" -> "0x268" [color="red" label=" Extract(159, 0, Is) == Extract(159, 0, Ia_store_1)"];
"0x144"[label="0x00000144 JUMPDEST \l0x00000145 CALLVALUE \l0x00000146 DUP1 \l0x00000147 ISZERO \l0x00000148 PUSH2 0x0150 \l0x0000014b JUMPI \l"];
"0x144" -> "0x150" [color="green" label=" Iv == 0"];
"0x144" -> "0x14c" [color="red" label=" Not(Iv == 0)"];
"0x4c"[label="0x0000004c DUP1 \l0x0000004d PUSH4 0x66bd78fd \l0x00000052 EQ \l0x00000053 PUSH2 0x0119 \l0x00000056 JUMPI \l"];
"0x4c" -> "0x119" [color="green" label=" Extract(255, 224, Id_1) == 1723693309"];
"0x4c" -> "0x57" [color="red" label=" Not(Extract(255, 224, Id_1) == 1723693309)"];
"0x14c"[label="0x0000014c PUSH1 0x00 \l0x0000014e DUP1 \l0x0000014f REVERT \l"];
"0x28d"[label="0x0000028d PUSH1 0x00 \l0x0000028f DUP1 \l0x00000290 REVERT \l"];
"0x150"[label="0x00000150 JUMPDEST \l0x00000151 POP \l0x00000152 PUSH2 0x0159 \l0x00000155 PUSH2 0x0322 \l0x00000158 JUMP \l"];
"0x150" -> "0x322" [color="black"];
"0xd4"[label="0x000000d4 JUMPDEST \l0x000000d5 CALLVALUE \l0x000000d6 DUP1 \l0x000000d7 ISZERO \l0x000000d8 PUSH2 0x00e0 \l0x000000db JUMPI \l"];
"0xd4" -> "0xe0" [color="green" label=" Iv == 0"];
"0xd4" -> "0xdc" [color="red" label=" Not(Iv == 0)"];
"0x57"[label="0x00000057 DUP1 \l0x00000058 PUSH4 0x6886bf1c \l0x0000005d EQ \l0x0000005e PUSH2 0x0144 \l0x00000061 JUMPI \l"];
"0x57" -> "0x144" [color="green" label=" Extract(255, 224, Id_1) == 1753661212"];
"0x57" -> "0x62" [color="red" label=" Not(Extract(255, 224, Id_1) == 1753661212)"];
"0x159"[label="0x00000159 JUMPDEST \l0x0000015a PUSH1 0x40 \l0x0000015c MLOAD \l0x0000015d DUP1 \l0x0000015e DUP3 \l0x0000015f DUP2 \l0x00000160 MSTORE \l0x00000161 PUSH1 0x20 \l0x00000163 ADD \l0x00000164 SWAP2 \l0x00000165 POP \l0x00000166 POP \l0x00000167 PUSH1 0x40 \l0x00000169 MLOAD \l0x0000016a DUP1 \l0x0000016b SWAP2 \l0x0000016c SUB \l0x0000016d SWAP1 \l0x0000016e RETURN \l"];
"0xdc"[label="0x000000dc PUSH1 0x00 \l0x000000de DUP1 \l0x000000df REVERT \l"];
"0xe0"[label="0x000000e0 JUMPDEST \l0x000000e1 POP \l0x000000e2 PUSH2 0x00ff \l0x000000e5 PUSH1 0x04 \l0x000000e7 DUP1 \l0x000000e8 CALLDATASIZE \l0x000000e9 SUB \l0x000000ea DUP2 \l0x000000eb ADD \l0x000000ec SWAP1 \l0x000000ed DUP1 \l0x000000ee DUP1 \l0x000000ef CALLDATALOAD \l0x000000f0 SWAP1 \l0x000000f1 PUSH1 0x20 \l0x000000f3 ADD \l0x000000f4 SWAP1 \l0x000000f5 SWAP3 \l0x000000f6 SWAP2 \l0x000000f7 SWAP1 \l0x000000f8 POP \l0x000000f9 POP \l0x000000fa POP \l0x000000fb PUSH2 0x020d \l0x000000fe JUMP \l"];
"0xe0" -> "0x20d" [color="black"];
"0x62"[label="0x00000062 DUP1 \l0x00000063 PUSH4 0x69934ee7 \l0x00000068 EQ \l0x00000069 PUSH2 0x016f \l0x0000006c JUMPI \l"];
"0x62" -> "0x16f" [color="green" label=" Extract(255, 224, Id_1) == 1771261671"];
"0x62" -> "0x6d" [color="red" label=" Not(Extract(255, 224, Id_1) == 1771261671)"];
"0x291"[label="0x00000291 JUMPDEST \l0x00000292 PUSH1 0x01 \l0x00000294 PUSH1 0x00 \l0x00000296 SWAP1 \l0x00000297 SLOAD \l0x00000298 SWAP1 \l0x00000299 PUSH2 0x0100 \l0x0000029c EXP \l0x0000029d SWAP1 \l0x0000029e DIV \l0x0000029f PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000002b4 AND \l0x000002b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000002ca AND \l0x000002cb PUSH2 0x08fc \l0x000002ce DUP4 \l0x000002cf SWAP1 \l0x000002d0 DUP2 \l0x000002d1 ISZERO \l0x000002d2 MUL \l0x000002d3 SWAP1 \l0x000002d4 PUSH1 0x40 \l0x000002d6 MLOAD \l0x000002d7 PUSH1 0x00 \l0x000002d9 PUSH1 0x40 \l0x000002db MLOAD \l0x000002dc DUP1 \l0x000002dd DUP4 \l0x000002de SUB \l0x000002df DUP2 \l0x000002e0 DUP6 \l0x000002e1 DUP9 \l0x000002e2 DUP9 \l0x000002e3 CALL \l0x000002e4 SWAP4 \l0x000002e5 POP \l0x000002e6 POP \l0x000002e7 POP \l0x000002e8 POP \l0x000002e9 ISZERO \l0x000002ea DUP1 \l0x000002eb ISZERO \l0x000002ec PUSH2 0x02f9 \l0x000002ef JUMPI \l"];
"0x291" -> "0x2f9" [color="green" label=" True"];
"0x291" -> "0x2f0" [color="red" label=" False"];
"0x1e8"[label="0x000001e8 JUMPDEST \l0x000001e9 PUSH1 0x00 \l0x000001eb DUP1 \l0x000001ec SWAP1 \l0x000001ed SLOAD \l0x000001ee SWAP1 \l0x000001ef PUSH2 0x0100 \l0x000001f2 EXP \l0x000001f3 SWAP1 \l0x000001f4 DIV \l0x000001f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000020a AND \l0x0000020b DUP2 \l0x0000020c JUMP \l"];
"0x1e8" -> "0x92" [color="black"];
"0x26c"[label="0x0000026c JUMPDEST \l0x0000026d ADDRESS \l0x0000026e PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000283 AND \l0x00000284 BALANCE \l0x00000285 DUP3 \l0x00000286 LT \l0x00000287 ISZERO \l0x00000288 ISZERO \l0x00000289 PUSH2 0x0291 \l0x0000028c JUMPI \l"];
"0x26c" -> "0x291" [color="green" label=" Not(ULE(balance_Ia, Id_2))"];
"0x26c" -> "0x28d" [color="red" label=" ULE(balance_Ia, Id_2)"];
"0x6d"[label="0x0000006d DUP1 \l0x0000006e PUSH4 0x8da5cb5b \l0x00000073 EQ \l0x00000074 PUSH2 0x0191 \l0x00000077 JUMPI \l"];
"0x6d" -> "0x191" [color="green" label=" Extract(255, 224, Id_1) == 2376452955"];
"0x6d" -> "0x78" [color="red" label=" Not(Extract(255, 224, Id_1) == 2376452955)"];
"0x16f"[label="0x0000016f JUMPDEST \l0x00000170 PUSH2 0x0177 \l0x00000173 PUSH2 0x0328 \l0x00000176 JUMP \l"];
"0x16f" -> "0x328" [color="black"];
"0x2f0"[label="0x000002f0 RETURNDATASIZE \l0x000002f1 PUSH1 0x00 \l0x000002f3 DUP1 \l0x000002f4 RETURNDATACOPY \l0x000002f5 RETURNDATASIZE \l0x000002f6 PUSH1 0x00 \l0x000002f8 REVERT \l"];
"0x268"[label="0x00000268 PUSH1 0x00 \l0x0000026a DUP1 \l0x0000026b REVERT \l"];
"0x3f6"[label="0x000003f6 JUMPDEST \l0x000003f7 PUSH1 0x01 \l0x000003f9 PUSH1 0x00 \l0x000003fb SWAP1 \l0x000003fc SLOAD \l0x000003fd SWAP1 \l0x000003fe PUSH2 0x0100 \l0x00000401 EXP \l0x00000402 SWAP1 \l0x00000403 DIV \l0x00000404 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000419 AND \l0x0000041a DUP2 \l0x0000041b JUMP \l"];
"0x3f6" -> "0x1a6" [color="black"];
"0x177"[label="0x00000177 JUMPDEST \l0x00000178 PUSH1 0x40 \l0x0000017a MLOAD \l0x0000017b DUP1 \l0x0000017c DUP3 \l0x0000017d ISZERO \l0x0000017e ISZERO \l0x0000017f ISZERO \l0x00000180 ISZERO \l0x00000181 DUP2 \l0x00000182 MSTORE \l0x00000183 PUSH1 0x20 \l0x00000185 ADD \l0x00000186 SWAP2 \l0x00000187 POP \l0x00000188 POP \l0x00000189 PUSH1 0x40 \l0x0000018b MLOAD \l0x0000018c DUP1 \l0x0000018d SWAP2 \l0x0000018e SUB \l0x0000018f SWAP1 \l0x00000190 RETURN \l"];
"0x78"[label="0x00000078 JUMPDEST \l0x00000079 PUSH1 0x00 \l0x0000007b DUP1 \l0x0000007c REVERT \l"];
"0x2f9"[label="0x000002f9 JUMPDEST \l0x000002fa POP \l0x000002fb PUSH1 0x01 \l0x000002fd SWAP1 \l0x000002fe POP \l0x000002ff SWAP2 \l0x00000300 SWAP1 \l0x00000301 POP \l0x00000302 JUMP \l"];
"0x2f9" -> "0xff" [color="black"];
"0x7d"[label="0x0000007d JUMPDEST \l0x0000007e CALLVALUE \l0x0000007f DUP1 \l0x00000080 ISZERO \l0x00000081 PUSH2 0x0089 \l0x00000084 JUMPI \l"];
"0x7d" -> "0x89" [color="green" label=" Iv == 0"];
"0x7d" -> "0x85" [color="red" label=" Not(Iv == 0)"];
"0xff"[label="0x000000ff JUMPDEST \l0x00000100 PUSH1 0x40 \l0x00000102 MLOAD \l0x00000103 DUP1 \l0x00000104 DUP3 \l0x00000105 ISZERO \l0x00000106 ISZERO \l0x00000107 ISZERO \l0x00000108 ISZERO \l0x00000109 DUP2 \l0x0000010a MSTORE \l0x0000010b PUSH1 0x20 \l0x0000010d ADD \l0x0000010e SWAP2 \l0x0000010f POP \l0x00000110 POP \l0x00000111 PUSH1 0x40 \l0x00000113 MLOAD \l0x00000114 DUP1 \l0x00000115 SWAP2 \l0x00000116 SUB \l0x00000117 SWAP1 \l0x00000118 RETURN \l"];
}
